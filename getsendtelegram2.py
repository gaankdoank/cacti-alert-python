#!/usr/bin/python3
import mysql.connector
import telebot
import logging
import json
import smtplib
import ssl
from mysql.connector import Error
from decimal import Decimal

bot = telebot.TeleBot("your-telegram-bot-api")
port = 465  # For SSL
smtp_server = "your.smtp.domain"
sender_email = "sender@yoursmtp.com"  # Enter your address
receiver_email = "receiver@yoursmtp.com"  # Enter receiver address
password = "yourpassword"

try:
    connection = mysql.connector.connect(host='your_db_host',
                                         database='cacti',
                                         user='your_db_user',
                                         password='your_db_password')

    sql_select_Query = "SELECT hostname, description, IF(status_event_count>0, status_event_count*300, IF(UNIX_TIMESTAMP(status_rec_date)>943916400,UNIX_TIMESTAMP()-UNIX_TIMESTAMP(status_rec_date), IF(snmp_sysUptimeInstance>0 AND snmp_version > 0, snmp_sysUptimeInstance,UNIX_TIMESTAMP()))) AS instate FROM host WHERE status='1' AND disabled=''"
    cursor = connection.cursor()
    cursor.execute(sql_select_Query)
    records = cursor.fetchall()
    hasil = []
    print("Total number of data: ", cursor.rowcount)

    print("\nPrinting each sitename record")
    for row in records:
        rowlist = list(row)
        seconds = row[2]
        seconds_in_day = 60 * 60 * 24
        seconds_in_hour = 60 * 60
        seconds_in_minute = 60
        days = seconds // seconds_in_day
        hours = (seconds - (days * seconds_in_day)) // seconds_in_hour
        minutes = (seconds - (days * seconds_in_day) - (hours * seconds_in_hour)) // seconds_in_minute
        del rowlist[2]
        rowlist.append(str(days) + "d:" + str(hours) + "h:" + str(minutes) + "m")
        hasil.append(rowlist)

    def default(obj):
      if isinstance(obj, Decimal):
        return str(obj)
      raise TypeError("Object of type '%s' is not JSON serializable" % type(obj).__name__)
      
    bot.send_message(your_chat_room_id,"Automatic hosts Checked, the following offline devices : \n ============================= \n \n"+json.dumps(hasil, default=default, sort_keys=True, indent=4, separators=(',',':'))+format("\n \n Total : ")+format(cursor.rowcount)+format(" devices"))
    message = """\
From: System Notification <trm-alert@ibstower.com>
Subject: Automatic Host Checking (ANCOL Area)

This message was generated by system \n."""+json.dumps(hasil, default=default, sort_keys=True, indent=4, separators=(',',':'))+format("\n \n Total : ")+format(cursor.rowcount)+format(" devices")
    context = ssl.create_default_context()
    with smtplib.SMTP_SSL(smtp_server, port, context=context) as server:
       server.login(sender_email, password)
       server.sendmail(sender_email, receiver_email, message)

except Error as e:
    print("Error reading data from MySQL table", e)
finally:
    if (connection.is_connected()):
        connection.close()
        cursor.close()
        print("MySQL connection is closed")
